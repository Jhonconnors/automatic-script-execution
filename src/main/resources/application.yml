spring:
  output:
    ansi:
      enabled: ALWAYS
  datasource:
    db-previous: # Configuración del primer DataSource
      jdbc-url: jdbc:sqlserver://${JDBC_PRIMARY_ENV}
      username: ${PRIMARY_USER}
      password: ${PRIMARY_PASSWORD}
      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      hikari:
        pool-name: PrimaryHikariPool
        maximum-pool-size: 10
        minimum-idle: 2
        idle-timeout: 30000
        max-lifetime: 600000
        connection-timeout: 30000
    db-production: # Configuración del segundo DataSource
      jdbc-url: jdbc:sqlserver://${JDBC_SECONDARY_ENV}
      username: ${SECONDARY_USER}
      password: ${SECONDARY_PASSWORD}
      driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
      hikari:
        pool-name: SecondaryHikariPool
        maximum-pool-size: 10
        minimum-idle: 2
        idle-timeout: 30000
        max-lifetime: 600000
        connection-timeout: 30000

# Opcional: Configuración de JPA si usas repositorios
jpa:
  hibernate:
    ddl-auto: none
  properties:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      dialect: org.hibernate.dialect.SQLServerDialect
